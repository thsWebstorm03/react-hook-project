{"version":3,"sources":["useLifecycle.js"],"names":["useLifecycle","onDidMount","onWillUnmount"],"mappings":";;;;;;;AAAA;;AACA;;;;AAmBA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAMC,UAAU,GAAG,8BAAnB;AACA,MAAMC,aAAa,GAAG,iCAAtB;AAEA,SAAO;AAAED,IAAAA,UAAU,EAAVA,UAAF;AAAcC,IAAAA,aAAa,EAAbA;AAAd,GAAP;AACD,CALD;;eAOeF,Y","sourcesContent":["import useDidMount from './useDidMount';\nimport useWillUnmount from './useWillUnmount';\n\n/**\n * Returns an object wrapping lifecycle hooks such as `useDidMount` or `useWillUnmount`.\n * It is intended as a shortcut to those hooks.\n *\n * ### Usage:\n *\n * ```jsx harmony\n * const MyComponent = () => {\n *   const { onDidMount, onWillUnmount } = useLifecycle();\n *\n *   onDidMount(() => console.log('Component did mount'));\n *   onWillUnmount(() => console.log('Component will unmount'));\n *\n *   return (<div />)\n * }\n * ```\n */\nconst useLifecycle = () => {\n  const onDidMount = useDidMount();\n  const onWillUnmount = useWillUnmount();\n\n  return { onDidMount, onWillUnmount };\n};\n\nexport default useLifecycle;\n"],"file":"useLifecycle.js"}