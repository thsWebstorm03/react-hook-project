{"version":3,"sources":["useMouseHandler.js"],"names":["useMouseHandler","ref","target","onMouseDownHandler","setOnMouseDown","onMouseEnterHandler","setOnMouseEnter","onMouseLeaveHandler","setOnMouseLeave","onMouseMoveHandler","setOnMouseMove","onMouseOutHandler","setOnMouseOut","onMouseOverHandler","setOnMouseOver","onMouseUpHandler","setOnMouseUp","current","document","addEventListener","removeEventListener","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport useCallbackRef from './useCallbackRef';\n\n/**\n * Returns a series of callback setter to possibly handle the most used mouse events.<br/>\n * It accepts a DOM ref representing the events target. <br/>\n * If a target is not provided the events will be globally attached to the document object.\n *\n * ### Target ref usage:\n *\n * ```jsx harmony\n * const MyComponent = () => {\n *   const [coordinates, setCoordinates] = useState([0, 0]);\n *   const { onMouseMove } = useMouseHandler();\n *\n *   onMouseMove((event) => {\n *     const nextCoords = [event.clientX, event.clientY];\n *     setCoordinates(nextCoords);\n *   });\n *\n *   return (\n *     <div style={style}>\n *       The current mouse coordinates within this div are:\n *       <p>x:{coordinates[0]} y:{coordinates[1]}</p>\n *     </div>\n *   );\n * }\n * ```\n * <br />\n *\n * ### Global events usage:\n *\n * ```jsx harmony\n * const MyComponent = () => {\n *   const [coordinates, setCoordinates] = useState([0, 0]);\n *   const { onMouseMove } = useMouseHandler();\n *\n *   onMouseMove((event) => {\n *     const nextCoords = [event.clientX, event.clientY];\n *     setCoordinates(nextCoords);\n *   });\n *\n *   return (\n *     <div style={style}>\n *       The current mouse coordinates within the document are:\n *       <p>x:{coordinates[0]} y:{coordinates[1]}</p>\n *     </div>\n *   );\n *};\n * ```\n */\nconst useMouseHandler = (ref = null) => {\n  let target;\n  const [onMouseDownHandler, setOnMouseDown] = useCallbackRef();\n  const [onMouseEnterHandler, setOnMouseEnter] = useCallbackRef();\n  const [onMouseLeaveHandler, setOnMouseLeave] = useCallbackRef();\n  const [onMouseMoveHandler, setOnMouseMove] = useCallbackRef();\n  const [onMouseOutHandler, setOnMouseOut] = useCallbackRef();\n  const [onMouseOverHandler, setOnMouseOver] = useCallbackRef();\n  const [onMouseUpHandler, setOnMouseUp] = useCallbackRef();\n\n  useEffect(() => {\n    if (ref !== null && !!ref.current) {\n      target = ref.current;\n    }\n\n    if (ref === null) {\n      target = document;\n    }\n\n    if (target) {\n      if (onMouseDownHandler.current) {\n        target.addEventListener('mousedown', onMouseDownHandler.current);\n      }\n      if (onMouseEnterHandler.current) {\n        target.addEventListener('mouseenter', onMouseEnterHandler.current);\n      }\n      if (onMouseLeaveHandler.current) {\n        target.addEventListener('mouseleave', onMouseLeaveHandler.current);\n      }\n      if (onMouseMoveHandler.current) {\n        target.addEventListener('mousemove', onMouseMoveHandler.current);\n      }\n      if (onMouseOutHandler.current) {\n        target.addEventListener('mouseout', onMouseOutHandler.current);\n      }\n      if (onMouseOverHandler.current) {\n        target.addEventListener('mouseover', onMouseOverHandler.current);\n      }\n      if (onMouseUpHandler.current) {\n        target.addEventListener('mouseup', onMouseUpHandler.current);\n      }\n    }\n\n    return () => {\n      if (target) {\n        target.removeEventListener('mousedown', onMouseDownHandler.current);\n        target.removeEventListener('mouseenter', onMouseEnterHandler.current);\n        target.removeEventListener('mouseleave', onMouseLeaveHandler.current);\n        target.removeEventListener('mousemove', onMouseMoveHandler.current);\n        target.removeEventListener('mouseout', onMouseOutHandler.current);\n        target.removeEventListener('mouseover', onMouseOverHandler.current);\n        target.removeEventListener('mouseup', onMouseUpHandler.current);\n      }\n    };\n  }, [ref, onMouseDownHandler, onMouseEnterHandler, onMouseLeaveHandler, onMouseMoveHandler, onMouseOutHandler,\n    onMouseOverHandler, onMouseUpHandler,\n  ]);\n\n  return {\n    onMouseDown: setOnMouseDown,\n    onMouseEnter: setOnMouseEnter,\n    onMouseLeave: setOnMouseLeave,\n    onMouseMove: setOnMouseMove,\n    onMouseOut: setOnMouseOut,\n    onMouseOver: setOnMouseOver,\n    onMouseUp: setOnMouseUp,\n  };\n};\n\nexport default useMouseHandler;\n"],"file":"useMouseHandler.js"}