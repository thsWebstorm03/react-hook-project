{"version":3,"sources":["useOnlineState.js"],"names":["useOnlineState","navigator","onLine","isOnline","setIsOnline","whenOnline","capture","whenOffline"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;AAMA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBACK,qBAASC,SAAS,CAACC,MAAnB,CADL;AAAA;AAAA,MACpBC,QADoB;AAAA,MACVC,WADU;;AAE3B,MAAMC,UAAU,GAAG,gCAAe,QAAf,EAAyB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAzB,CAAnB;AACA,MAAMC,WAAW,GAAG,gCAAe,SAAf,EAA0B;AAAED,IAAAA,OAAO,EAAE;AAAX,GAA1B,CAApB;AAGAD,EAAAA,UAAU,CAAC,YAAM;AACfD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFS,CAAV;AAIAG,EAAAA,WAAW,CAAC,YAAM;AAChBH,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFU,CAAX;AAIA,SAAOD,QAAP;AACD,CAfD;;eAiBeH,c","sourcesContent":["import { useState } from 'react';\nimport useGlobalEvent from './useGlobalEvent';\n\n/**\n * Uses the [Navigator online API](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorOnLine/onLine) to define\n * whether the browser is connected or not.\n */\nconst useOnlineState = () => {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const whenOnline = useGlobalEvent('online', { capture: true });\n  const whenOffline = useGlobalEvent('offline', { capture: true });\n\n\n  whenOnline(() => {\n    setIsOnline(true);\n  });\n\n  whenOffline(() => {\n    setIsOnline(false);\n  });\n\n  return isOnline;\n};\n\nexport default useOnlineState;\n"],"file":"useOnlineState.js"}