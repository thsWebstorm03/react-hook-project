{"version":3,"sources":["usePrev.js"],"names":["usePrev","value","prevValue","current","undefined"],"mappings":";;;;;;;AAAA;;AA0BA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AACzB,MAAMC,SAAS,GAAG,oBAAlB;AAEA,wBAAU,YAAM;AACdA,IAAAA,SAAS,CAACC,OAAV,GAAoBF,KAApB;AAEA,WAAO,YAAM;AACXC,MAAAA,SAAS,CAACC,OAAV,GAAoBC,SAApB;AACD,KAFD;AAGD,GAND;AAQA,SAAOF,SAAS,CAACC,OAAjB;AACD,CAZD;;eAceH,O","sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * On each render returns the previous value of the given variable/constant.\n *\n * ### Usage:\n *\n * ```js harmony\n * const TestComponent = () => {\n *   const [seconds, setSeconds] = useState(0);\n *   const prevSeconds = usePrev(seconds);\n *   const everySecond = useInterval(1000);\n *\n *   everySecond(() => {\n *     setSeconds(1 + seconds);\n *   });\n *\n *   return (\n *     <div style={compStyle}>\n *       <p>{seconds}s</p>\n *       <p>Prev value: {prevSeconds}</p>\n *     </div>\n *   );\n * };\n * ```\n */\nconst usePrev = (value) => {\n  const prevValue = useRef();\n\n  useEffect(() => {\n    prevValue.current = value;\n\n    return () => {\n      prevValue.current = undefined;\n    };\n  });\n\n  return prevValue.current;\n};\n\nexport default usePrev;\n"],"file":"usePrev.js"}