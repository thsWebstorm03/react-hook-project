{"version":3,"sources":["useDidMount.js"],"names":["useDidMount","onMountHandler","setOnMountHandler","current"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;AAiBA,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,wBACoB,kCADpB;AAAA;AAAA,MACjBC,cADiB;AAAA,MACDC,iBADC;;AAGxB,wBAAU,YAAM;AACd,QAAID,cAAc,CAACE,OAAnB,EAA4B;AAC1BF,MAAAA,cAAc,CAACE,OAAf;AACD;AACF,GAJD,EAIG,EAJH;AAMA,SAAOD,iBAAP;AACD,CAVD;;eAYeF,W","sourcesContent":["import { useEffect } from 'react';\nimport useCallbackRef from './useCallbackRef';\n\n/**\n * Returns a callback setter for a callback to be performed when the component did mount.\n *\n * ### Usage:\n *\n * ```jsx harmony\n * const MyComponent = () => {\n *   const onDidMount = useDidMount();\n *\n *   onDidMount(() => console.log('Component did mount'));\n *\n *   return (<div />)\n * }\n * ```\n */\nconst useDidMount = () => {\n  const [onMountHandler, setOnMountHandler] = useCallbackRef();\n\n  useEffect(() => {\n    if (onMountHandler.current) {\n      onMountHandler.current();\n    }\n  }, []);\n\n  return setOnMountHandler;\n};\n\nexport default useDidMount;\n"],"file":"useDidMount.js"}