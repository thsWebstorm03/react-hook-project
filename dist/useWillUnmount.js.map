{"version":3,"sources":["useWillUnmount.js"],"names":["useWillUnmount","handler","onUnmountHandler","setOnUnmount","current"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;AAKA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AAAA,6BACO,sCAAoBA,OAApB,CADP;AAAA;AAAA,MAC3BC,gBAD2B;AAAA,MACTC,YADS;;AAGlC,wBAAU;AAAA,WAAM,YAAM;AACpB,UAAID,gBAAgB,CAACE,OAArB,EAA8B;AAC5BF,QAAAA,gBAAgB,CAACE,OAAjB;AACD;AACF,KAJS;AAAA,GAAV,EAIG,EAJH;AAMA,SAAOD,YAAP;AACD,CAVD;;eAYeH,c","sourcesContent":["import { useEffect } from 'react';\nimport createHandlerSetter from './utils/createHandlerSetter';\n\n/**\n * Returns a callback setter for a callback to be performed when the component will unmount.\n */\nconst useWillUnmount = (handler) => {\n  const [onUnmountHandler, setOnUnmount] = createHandlerSetter(handler);\n\n  useEffect(() => () => {\n    if (onUnmountHandler.current) {\n      onUnmountHandler.current();\n    }\n  }, []);\n\n  return setOnUnmount;\n};\n\nexport default useWillUnmount;\n"],"file":"useWillUnmount.js"}