{"version":3,"sources":["useInterval.js"],"names":["useInterval","delay","intervalRef","callbackRef","setCallbackRef","current","setInterval","clearInterval"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;AAgCA,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAkB;AAAA,MAAjBC,KAAiB,uEAAT,IAAS;AACpC,MAAMC,WAAW,GAAG,oBAApB;;AADoC,wBAEE,kCAFF;AAAA;AAAA,MAE7BC,WAF6B;AAAA,MAEhBC,cAFgB;;AAIpC,wBAAU,YAAM;AACd,QAAI,CAACF,WAAW,CAACG,OAAb,IAAwBF,WAAW,CAACE,OAAxC,EAAiD;AAC/CH,MAAAA,WAAW,CAACG,OAAZ,GAAsBC,WAAW,CAAC,YAAM;AACtCH,QAAAA,WAAW,CAACE,OAAZ;AACD,OAFgC,EAE9BJ,KAF8B,CAAjC;AAGD;;AAED,WAAO,YAAM;AACXM,MAAAA,aAAa,CAACL,WAAW,CAACG,OAAb,CAAb;AACD,KAFD;AAGD,GAVD,EAUG,CAACJ,KAAD,EAAQE,WAAR,CAVH;AAYA,SAAOC,cAAP;AACD,CAjBD;;eAmBeJ,W","sourcesContent":["import { useEffect, useRef } from 'react';\nimport useCallbackRef from './useCallbackRef';\n\n/**\n * Returns a setter function that accepts a callback to be performed every 'x' milliseconds.\n *\n * ### Usage:\n *\n * ```jsx harmony\n * const TestComponent = () => {\n *   const [show2sec, setShow2Sec] = useState();\n *   const [show5sec, setShow5Sec] = useState();\n *   const after2Second = useTimeout(2000);\n *   const after5Seconds = useTimeout(5000);\n *\n *   after2Second(() => {\n *     setShow2Sec(true);\n *   });\n *\n *   after5Seconds(() => {\n *     setShow5Sec(true);\n *   });\n *\n *   return (\n *     <div>\n *       <p>Content delay...</p>\n *       {show2sec && <p>Shown after 2 seconds...</p>}\n *       {show5sec && <p>Shown after 5 seconds.</p>}\n *     </div>\n *   );\n * };\n * ```\n */\nconst useInterval = (delay = 1000) => {\n  const intervalRef = useRef();\n  const [callbackRef, setCallbackRef] = useCallbackRef();\n\n  useEffect(() => {\n    if (!intervalRef.current && callbackRef.current) {\n      intervalRef.current = setInterval(() => {\n        callbackRef.current();\n      }, delay);\n    }\n\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  }, [delay, callbackRef]);\n\n  return setCallbackRef;\n};\n\nexport default useInterval;\n"],"file":"useInterval.js"}