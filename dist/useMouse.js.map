{"version":3,"sources":["useMouse.js"],"names":["useMouse","ref","state","events"],"mappings":";;;;;;;AAAA;;AACA;;;;AA+CA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAgB;AAAA,MAAfC,GAAe,uEAAT,IAAS;AAC/B,MAAMC,KAAK,GAAG,+BAAcD,GAAd,CAAd;AACA,MAAME,MAAM,GAAG,gCAAeF,GAAf,CAAf;AAEA,SAAO,CAACC,KAAD,EAAQC,MAAR,CAAP;AACD,CALD;;eAOeH,Q","sourcesContent":["import useMouseEvents from './useMouseEvents';\nimport useMouseState from './useMouseState';\n\n/**\n * Returns an array where the first item is the mouse state from the `useMouseState` hook and the second item\n * is the object of callback setters from the `useMouseEvents` hook.\n * It is intended as a shortcut to those hooks.\n *\n * ### Usage:\n *\n * ```jsx harmony\n * const MyComponent = () => {\n *   const [mouseState, { onMouseMove }] = useMouseEvents();\n *\n *   // demo purposes only, in real-life scenario use the onMouseMove prop instead\n *   onMouseMove((event) => {\n *     trackMousePosition(event);\n *   });\n *\n *   return (\n *     <div>\n *       The current mouse coordinates within this div are:\n *       <p>x:{mouseState.clientX} y:{mouseState.clientY}</p>\n *     </div>\n *   );\n * }\n * ```\n *\n * ### Shall the `useMouse` handlers like `onMouseMove` replace the standard mouse handler props?\n *\n * **They shall not!**<br />\n * **useMouse is meant to be used to abstract more complex hooks that need to control mouse**, for instance:\n * a drag n drop hook.<br />\n * Using useMouse handlers instead of the classic props approach it's just as bad as it sounds since you'll\n * lose the React SyntheticEvent performance boost.<br />\n * If you were doing something like the following:\n *\n * ```jsx harmony\n * const MyComponent = (props) => {\n *  const { myCallback } = props;\n *\n *  return <div onMouseDown={myCallback} />\n * }\n * ```\n *\n * **Please keep doing it**!\n *\n */\nconst useMouse = (ref = null) => {\n  const state = useMouseState(ref);\n  const events = useMouseEvents(ref);\n\n  return [state, events];\n};\n\nexport default useMouse;\n"],"file":"useMouse.js"}