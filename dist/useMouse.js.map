{"version":3,"sources":["useMouse.js"],"names":["useMouse","ref","state","handlers"],"mappings":";;;;;;;AAAA;;AACA;;;;AAoBA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAgB;AAAA,MAAfC,GAAe,uEAAT,IAAS;AAC/B,MAAMC,KAAK,GAAG,+BAAcD,GAAd,CAAd;AACA,MAAME,QAAQ,GAAG,iCAAgBF,GAAhB,CAAjB;AAEA,SAAO,CAACC,KAAD,EAAQC,QAAR,CAAP;AACD,CALD;;eAOeH,Q","sourcesContent":["import useMouseHandler from './useMouseHandler';\nimport useMouseState from './useMouseState';\n\n/**\n * Returns an array where the first item is the state of the mouse from `useMouseState` and the second item\n * is the object of callback setters from `useMouseHandler`.\n * It is intended as a shortcut to those hooks.\n *\n * ### Usage:\n *\n * ```jsx harmony\n * const MyComponent = () => {\n *   const { onMount, onUnmount } = useLifecycle();\n *\n *   onUnmount(() => console.log('Component will mount'));\n *   onUnmount(() => console.log('Component will unmount'));\n *\n *   return (<div />)\n * }\n * ```\n */\nconst useMouse = (ref = null) => {\n  const state = useMouseState(ref);\n  const handlers = useMouseHandler(ref);\n\n  return [state, handlers];\n};\n\nexport default useMouse;\n"],"file":"useMouse.js"}