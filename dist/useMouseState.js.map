{"version":3,"sources":["useMouseState.js"],"names":["createStateObject","event","clientX","clientY","screenX","screenY","useMouseState","ref","state","setState","onMouseMove","nextState"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;AAEA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AAAA,SAAY;AACpCC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADqB;AAEpCC,IAAAA,OAAO,EAAEF,KAAK,CAACE,OAFqB;AAGpCC,IAAAA,OAAO,EAAEH,KAAK,CAACG,OAHqB;AAIpCC,IAAAA,OAAO,EAAEJ,KAAK,CAACI;AAJqB,GAAZ;AAAA,CAA1B;;AA6CA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAgB;AAAA,MAAfC,GAAe,uEAAT,IAAS;;AAAA,kBACV,qBAAS;AAAEL,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,OAAO,EAAE,CAAvB;AAA0BC,IAAAA,OAAO,EAAE,CAAnC;AAAsCC,IAAAA,OAAO,EAAE;AAA/C,GAAT,CADU;AAAA;AAAA,MAC7BG,KAD6B;AAAA,MACtBC,QADsB;;AAAA,wBAEZ,iCAAeF,GAAf,CAFY;AAAA,MAE5BG,WAF4B,mBAE5BA,WAF4B;;AAIpCA,EAAAA,WAAW,CAAC,UAACT,KAAD,EAAW;AACrB,QAAMU,SAAS,GAAGX,iBAAiB,CAACC,KAAD,CAAnC;AACAQ,IAAAA,QAAQ,CAACE,SAAD,CAAR;AACD,GAHU,CAAX;AAKA,SAAOH,KAAP;AACD,CAVD;;eAYeF,a","sourcesContent":["import { useState } from 'react';\nimport useMouseEvents from './useMouseEvents';\n\nconst createStateObject = (event) => ({\n  clientX: event.clientX,\n  clientY: event.clientY,\n  screenX: event.screenX,\n  screenY: event.screenY,\n});\n\n/**\n * Returns the current state (position) of the mouse pointer.<br/>\n * It possibly accepts a DOM ref representing the mouse target.<br/>\n * If a target is not provided the state will be caught globally.\n *\n * ### Target ref usage:\n *\n * ```jsx harmony\n * const MouseReporter = () => {\n *    const ref = useRef();\n *    const mouseState = useMouseState(ref);\n *\n *    return (\n *      <div ref={ref} style={style}>\n *        Mouse over me to get the mouse position:\n *        {mouseState.pageX}, {mouseState.pageY}\n *      </div>\n *    );\n * }\n * ```\n * <br />\n *\n * ### Global events usage:\n *\n * ```jsx harmony\n * const MouseReporter = () => {\n *    const mouseState = useMouseState();\n *\n *    return (\n *      <div ref={ref} style={style}>\n *        Current mouse position:\n *        {mouseState.pageX}, {mouseState.pageY}\n *      </div>\n *    );\n * }\n * ```\n * ```\n */\nconst useMouseState = (ref = null) => {\n  const [state, setState] = useState({ clientX: 0, clientY: 0, screenX: 0, screenY: 0 });\n  const { onMouseMove } = useMouseEvents(ref);\n\n  onMouseMove((event) => {\n    const nextState = createStateObject(event);\n    setState(nextState);\n  });\n\n  return state;\n};\n\nexport default useMouseState;\n"],"file":"useMouseState.js"}